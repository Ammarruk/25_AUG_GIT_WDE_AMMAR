Line 1 created by main branch 
Line 2 created by main branch
Git Commands Notes
==================

1. Check Git Version
--------------------
git --version
ðŸ‘‰ Shows installed Git version.

2. Initialize Repository with Main Branch
-----------------------------------------
git init -b main
ðŸ‘‰ Creates a new Git repository in the current folder.
- `-b main` means the default branch will be called `main` (instead of `master`).
- `main` is like the primary line of development where final code usually lives.

3. Check Status
---------------
git status
ðŸ‘‰ Shows the status of files:
- Untracked â†’ New file, not in Git yet.
- Modified â†’ File changed after last commit.
- Staged â†’ File added with `git add`, ready to be committed.

4. Add Files to Staging Area
----------------------------
git add filename.txt
ðŸ‘‰ Adds a specific file to staging.

For all files:
git add .

5. Configure User (One-Time Setup)
----------------------------------
git config --global user.name "Ammarruk"
git config --global user.email "ammarruk2002@gmail.com"
ðŸ‘‰ Sets your identity for commits (applies to all projects on your system).

(If you want only for the current repo, remove `--global`).

6. Commit Changes
-----------------
git commit -m "first commit"
ðŸ‘‰ Saves a snapshot of staged files with a message.
- Think of it as "Save Point" in your project.

7. View Commit History
----------------------
git log
ðŸ‘‰ Shows commit history with ID, author, date, and message.

For short one-line history:
git log --oneline

Git Workflow Summary
--------------------
1. git init -b main â†’ Create repo
2. git status â†’ Check files
3. git add . â†’ Stage files
4. git commit -m "message" â†’ Save snapshot
5. git log â†’ Confirm
